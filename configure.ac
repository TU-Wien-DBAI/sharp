#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

# initialize autoconf
#####################
AC_PREREQ([2.65])				# minimum autoconf version

# supply the name of the project, version number, and contact email
AC_INIT([sharp], [0.2], [morak@dbai.tuwien.ac.at])

AC_CONFIG_SRCDIR([src/HtdSolver.cpp]) 		# source directory
AC_CONFIG_HEADERS([config.h])			# name of generated header
AC_CONFIG_MACRO_DIR([m4])			# folder for macros
AC_CONFIG_AUX_DIR([build-aux])			# folder for auxilliary files

# initialize automake with the following options:
#################################################
#   subdir-objects:
#	tell automake to create object files in same directory as the source
AM_INIT_AUTOMAKE([1.11 dist-xz subdir-objects])

# enable libtool to build libraries
###################################
LT_PREREQ([2.2])		# minimum libtool version
LT_INIT				# initialize libtool
LT_LANG([C++])		 	# set libtool language(s)

# define needed variables
#########################

# check that relevant programs are present on the system and enable them
########################################################################
AC_LANG([C++])			# check for C++ support
AC_PROG_CXX			# check for C++ compiler support
AC_PROG_INSTALL			# check for 'install'
AC_PROG_LN_S			# check for 'ln -s'

# check for specific, required compiler/preprocessor characteristics
####################################################################

# check for, and enable C++11, otherwise fail
AX_CXX_COMPILE_STDCXX_11([noext], [mandatory])

# preprocessor flags should include the compiler flags
CPPFLAGS=$CPPFLAGS$CXXFLAGS

# define optional features (--enable-FEATURE)
#############################################

# define optional packages to use (--with-PACKAGE)
##################################################

# add the --with-gmp and --without-gmp option
#TODO: pass path to library as parameter to the option
AC_MSG_CHECKING([whether to build with GNU MP support])
AC_ARG_WITH([gmp],
	    [AS_HELP_STRING([--without-gmp], [disable support for GNU MP])],
	    [case "$enableval" in			
	       yes|no) ;;				
	       *) AC_MSG_ERROR([bad value ${enableval} for gmp option]) ;;
	     esac
       	     with_gmp=$enableval],
	    [with_gmp=yes])
AC_MSG_RESULT([$with_gmp])

# definitions for config.h (the header file generated by the configure script)
##############################################################################

# define that we are building the library, and should export symbols
AC_DEFINE_UNQUOTED([SHARP_EXPORTS], [1], [Define to 1 if the library is being
		                          built (as opposed to being used).])

# define whether GNU MP library is used
AS_IF([test "x$with_gmp" = xyes],
      [AC_DEFINE_UNQUOTED([HAVE_LIBGMP], [1], [Define to 1 if the GNU MP
					       library is available.])])
			  
# check that libraries are present on the system
################################################

# check for htd library
#TODO: check for "none required" output of AC_SEARCH_LIBS
#TODO: check for some reasonable method inside the library
AC_SEARCH_LIBS([_ZTVN3htd11IHypergraphE], [htd],
	        [GMP_LIBS=$ac_cv_search__ZTVN3htd11IHypergraphE],
	        [AC_MSG_FAILURE([libhtd not found])])

# if enabled, check for GNU MP library
#TODO: check for "none required" output of AC_SEARCH_LIBS
AS_IF([test "x$with_gmp" = xyes],
      [AC_SEARCH_LIBS([__gmpz_init], [gmp],
		      [GMP_LIBS=$ac_cv_search___gmpz_init],
		      [AC_MSG_FAILURE([libgmp not found])])])

# checks for C header files
###########################

# if enabled, check for GNU MP C header
AS_IF([test "x$with_gmp" = xyes], 
      [AC_CHECK_HEADER([gmp.h], [],
		       [AC_MSG_FAILURE([libgmp header not found])])])

# checks for C++ header files
#############################
AC_LANG_PUSH([C++])

# check for htd library header
AC_CHECK_HEADER([htd/main], [],
		[AC_MSG_FAILURE([libhtd library header not found])])

# if enabled, check for GNU MP C++ header
AS_IF([test "x$with_gmp" = xyes], 
      [AC_CHECK_HEADER([gmpxx.h], [],
		       [AC_MSG_FAILURE([libgmp C++ header not found])])])

AC_LANG_POP([C++])

# checks for typedefs and structures
####################################

# checks for standard library functions
#######################################
#AC_CHECK_FUNCS([...])

# pass information to automake
##############################
#AC_SUBST([...])

# tell autoconf which files will be generated by it
###################################################
AC_CONFIG_FILES([Makefile
		 tests/Makefile])

# generate the config.status script and use it to generate the config files
###########################################################################
AC_OUTPUT
